ssh adtuan@178.128.88.112
HQhqraAgzLMU92Vh


Mysql: covid/covid@demo2019

4. Create an mysql account for admin website
$ sudo mysql
mysql> CREATE DATABASE covid CHARACTER SET 'utf8';
mysql> CREATE USER 'covid'@'localhost' IDENTIFIED BY 'covid@demo2019';
mysql> GRANT ALL ON covid.* TO 'covid'@'localhost';
mysql> quit

5. Upload source code to server and config source, db, virtual env
- (Upload: scp /Users/etuannv/scraping/covid_scraper/sourcecode/covid_web.zip adtuan@45.76.112.223:/home/adtuan/)
or check out with Git
mkdir covid
git clone https://github.com/etuannv/django-dashboard-coreui.git
git checkout covid24

5.1 Create .env file
vim .env
DB_NAME=covid
DB_USER=covid
DB_PASSWORD=covid@demo2019
DB_HOST=127.0.0.1
DB_PORT=3306

SECRET_KEY=S3crEt_9966
PRODUCTION_SERVER=178.128.88.112


6. Create virtualenv
- Create virtual env: virtualenv -p /usr/bin/python3 web_env
- Active virtual env: source web_env/bin/activate 
- Install requirement environment: pip3 install -r requirements.txt 
- Setting dabase connect: vi settings.py
- (optional): testing the server: 
sudo ufw allow 8000
python manage.py runserver 0.0.0.0:8000

7. Create uWSGI config ini file
sudo vi /etc/uwsgi/sites/covid_web.ini

- The covid_web.ini file 

[uwsgi]
project = covid24
uid = adtuan
base = /home/%(uid)/

chdir = %(base)/%(project)
home = %(base)/%(project)/web_env
module = core.wsgi:application

master = true
processes = 5

socket = %(base)/%(project)/%(project).sock
chown-socket = %(uid):www-data
chmod-socket = 666
vacuum = true

# master
master = true
# số worker tối đa
processes = 10



7. Configure Nginx

sudo vi /etc/nginx/sites-available/covid_web

- The covid_web file

server {
    listen 80;
    listen [::]:80;
    server_name covid24h.live www.covid24h.live;
    return 302 https://$server_name$request_uri;
}


server {

    # SSL configuration

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    #ssl        on;
    ssl_certificate         /etc/ssl/certs/cert.pem;
    ssl_certificate_key     /etc/ssl/private/key.pem;
    ssl_client_certificate /etc/ssl/certs/cloudflare.crt;
    ssl_verify_client on;

    server_name covid24h.live www.covid24h.live;
    root /home/adtuan/covid24;

    location = /favicon.ico {access_log off; log_not_found off; }

    location /static/  {
        alias /home/adtuan/covid24/staticfiles/;
    }

    location / {
        include        /etc/nginx/uwsgi_params;
        uwsgi_pass     unix:///home/adtuan/covid24/covid24.sock;
        try_files $uri $uri/ =404;
    }
}



- Link to site-available
sudo ln -s /etc/nginx/sites-available/covid_web /etc/nginx/sites-enabled/covid_web

- Verify your nginx config syntax
sudo nginx -t
- After that restart Nginx service to load the new config
sudo systemctl restart nginx

- Finally, start your uWSGI server
sudo systemctl restart uwsgi




==================================================
Config schedule to run the covid_scraper
mkdir scraper_env
virtualenv -p /usr/bin/python3 scraper_env
source scraper_env/bin/activate 
pip3 install -r requirements.txt 

Set crontabl
crontab -e
0 * * * * nohup /home/adtuan/covid24/covid-scrapy/job_run_all_spider.sh &> /home/adtuan/covid24/covid-scrapy/scraper_log.out &
